CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    // Store the input data bits using correct output naming
    Bit4(in=indata, load=load, out[0]=d1, out[1]=d2, out[2]=d3, out[3]=d4);

    // 4-bit counter to track bit selection
    Counter(inc=enable, reset=reset, out=count);

    // Extract last 2 bits of counter to select which bit to output
    Last2(in=count, out=count2);

    // Select the correct bit based on counter value
    Mux4Way(a=d1, b=d2, c=d3, d=d4, sel=count2, out=souts);

    // Only output when enabled
    Mux(a=false, b=souts, sel=enable, out=souts1);

    // Check if all bits have been sent
    And(a=count2[0], b=count2[1], out=comp);
    Bit(in=comp, load=true, out=compd);
    Mux(a=false, b=true, sel=compd, out=reset);
    
    // Handle completion signal
    And(a=compd, b=enable, out=complete);

    // Output the serial data
    Mux(a=souts1, b=false, sel=complete, out=sout);
}
